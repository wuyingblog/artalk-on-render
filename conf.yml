# HTTP Server
host: "0.0.0.0"

# 端口
port: 23366

# 加密密钥
app_key: "Thoi9eik"

# 调试模式
debug: false

# 时区
timezone: "Asia/Shanghai"

# 数据库
db:
  # 数据库类型 ["sqlite", "mysql", "pgsql", "mssql"]
  type: "sqlite"
  # 数据库文件 (仅 SQLite 数据库需填写)
  file: "./data/artalk-go.db"
  # 数据库名称
  name: "artalk"
  # 数据库地址
  host: "localhost"
  # 数据库端口
  port: 3306
  # 数据库账户
  user: "root"
  # 数据库密码
  password: ""
  # 编码格式
  charset: "utf8mb4"
  # 表前缀 (例如："atk_")
  table_prefix: ""

# 日志
log:
  enabled: true # 总开关
  # filename: "/data/artalk-go.log" # 日志文件路径

# 缓存
cache:
  type: "builtin" # 支持 redis, memcache, builtin (自带缓存)
  expires: 30     # 缓存过期时间 (单位：分钟)
  warm_up: false  # 程序启动时预热缓存
  server: ""      # 连接缓存服务器 (例如："localhost:6379")

# 可信域名
trusted_domains:
  - "*" # 无限制
  #- "https://artalk.你的域名:23366"

# SSL
ssl:
  enabled: false
  cert_path: ""
  key_path: ""

# 默认站点名
site_default: "默认站点"

# 管理员账户
admin_users:
  - name: "admin"
    email: "admin@example.com"
    password: "6bb872d8a9aee9fd6ed2265c8b486490" # 密码支持 bcrypt 或 md5 加密，例如填写："(md5)50c21190c6e4e5418c6a90d2b5031119"
    badge_name: "管理员"
    badge_color: "#FF6C00"

# 登录超时 (单位：秒)
login_timeout: 259200

# 评论审核
moderator:
  pending_default: false # 发表新评论默认为 “待审状态”
  api_fail_block: false  # 垃圾检测 API 请求错误仍然拦截
  # akismet.com 反垃圾
  akismet_key: ""
  # 腾讯云文本内容安全 (tms)
  tencent: # https://cloud.tencent.com/document/product/1124/64508
    enabled: false
    secret_id: ""
    secret_key: ""
    region: "ap-guangzhou"
  # 阿里云内容安全
  aliyun: # https://help.aliyun.com/document_detail/28417.html
    enabled: false
    access_key_id: ""
    access_key_secret: ""
    region: "cn-shanghai"
  # 关键词词库过滤
  keywords:
    enabled: false
    pending: false # 匹配成功设为待审状态
    files:         # 支持多个词库文件
      - "/data/词库_1.txt"
    file_sep: "\n" # 词库文件内容分割符
    replac_to: "x" # 替换字符

# 验证码
captcha:
  enabled: true    # 总开关
  always: false    # 总是需要验证码
  action_limit: 3  # 激活验证码所需操作次数
  action_reset: 60 # 重置操作计数器超时 (单位：s, 设为 -1 不重置)
  # Geetest 极验
  geetest: # https://www.geetest.com
    enabled: false
    captcha_id: ""
    captcha_key: ""

# 邮件通知
email:
  enabled: false    # 总开关
  send_type: "smtp" # 发送方式 [smtp, ali_dm, sendmail]
  send_name: "{{reply_nick}}"      # 发信人昵称
  send_addr: "noreply@example.com" # 发信人地址
  mail_subject: "[{{site_name}}] 您收到了来自 @{{reply_nick}} 的回复"
  mail_tpl: "default" # 邮件模板文件
  smtp:
    host: "smtp.qq.com"
    port: 587
    username: "example@qq.com"
    password: ""
  ali_dm: # https://help.aliyun.com/document_detail/29444.html
    access_key_id: ""     # 阿里云颁发给用户的访问服务所用的密钥 ID
    access_key_secret: "" # 用于加密的密钥
    account_name: "noreply@example.com" # 管理控制台中配置的发信地址

# 图片上传
img_upload:
  enabled: false # 总开关
  path: "/data/artalk-img/" # 图片存放路径
  max_size: 5                # 图片大小限制 (单位：MB)
  public_path: null          # 指定图片链接基础路径 (默认为 "/static/images/")
  # 使用 upgit 将图片上传到 GitHub 或图床 (https://github.com/pluveto/upgit)
  upgit:
    enabled: false  # 启用 upgit
    exec: "./upgit -c <upgit配置文件路径> -t /artalk-img"
    del_local: true # 上传后删除本地的图片

# 管理员多元推送
admin_notify:
  # 通知模版
  notify_tpl: "default"
  noise_mode: false
  # 邮件通知管理员
  email:
    enabled: true # 当使用其他推送方式时，可以关闭管理员邮件通知
    mail_subject: "[{{site_name}}] 您的文章「{{page_title}}」有新回复"
  # Telegram
  telegram:
    enabled: false
    api_token: ""
    receivers:
      - 7777777
  # Bark
  bark:
    enabled: false
    server: "http://day.app/xxxxxxx/"
  # 飞书
  lark:
    enabled: false
    webhook_url: ""
  # WebHook
  webhook:
    enabled: false
    url: ""
  # 另支持 钉钉、Slack、LINE 等多种推送方式
  # 详情参考：https://artalk.js.org/guide/backend/notify.html
